spring.application.name=reservation-service

spring.datasource.url=jdbc:postgresql://${RESERVATIONS_DB_HOST}:${RESERVATIONS_DB_PORT}/reservations
spring.datasource.username=${RESERVATIONS_DB_USER}
spring.datasource.password=${RESERVATIONS_DB_PASSWORD}

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.open-in-view=false

management.endpoints.web.exposure.include=health,info,metrics

spring.jackson.date-format=dd/MM/yyyy HH:mm:ss
spring.jackson.time-zone=America/Mexico_City

# Configurar OpenFeign

feign.circuitbreaker.enabled=true
feign.alphanumeric-ids.enabled=true
resilience4j.circuitbreaker.instances.CustomerServiceRemoteClientgetCliente.minimumNumberOfCalls=10
resilience4j.timelimiter.instances.CustomerServiceRemoteClientgetCliente.timeoutDuration=10s
resilience4j.circuitbreaker.instances.InventoryServiceRemoteClientgetVehiculo.minimumNumberOfCalls=10
resilience4j.timelimiter.instances.InventoryServiceRemoteClientgetVehiculo.timeoutDuration=10s
resilience4j.circuitbreaker.instances.InventoryServiceRemoteClientupdateVehiculo.minimumNumberOfCalls=10
resilience4j.timelimiter.instances.InventoryServiceRemoteClientupdateVehiculo.timeoutDuration=10s

feign.customer-service.name=customers-ms
feign.customer-service.url=http://customer-service:8080

feign.inventory-service.name=inventory-ms
feign.inventory-service.url=http://inventory-service:8081

#Configurar solo si se ejecutan todos los servicios en el mismo host
server.port=8082

#Open Tracing

logging.level.io.jaegertracing=DEBUG
opentracing.jaeger.udp-sender.host=jaeger
opentracing.jaeger.udp-sender.port=6831
#opentracing.jaeger.http-sender.url=http://jaeger:14268/api/traces
opentracing.jaeger.log-spans=true